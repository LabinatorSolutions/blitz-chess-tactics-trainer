<% content_for(:title) { "Admin Dashboard" } %>

<div class="admin-dashboard">
    <h1>Admin Dashboard</h1>
    
    <div class="period-toggle">
        <a href="/admin?period=week" class="toggle-btn <%= 'active' if @time_period == 'week' %>">
            Past Week
        </a>
        <a href="/admin?period=month" class="toggle-btn <%= 'active' if @time_period == 'month' %>">
            Past Month
        </a>
    </div>
    
    <p class="admin-subtitle">Game Mode Statistics - <%= @period_label %></p>

    <div class="chart-container">
      <h2>Activity Chart</h2>
      <canvas id="activityChart" width="800" height="400"></canvas>
    </div>

    <div class="chart-container">
      <h2>Puzzle Solving Activity Chart</h2>
      <canvas id="solvedPuzzlesChart" width="800" height="400"></canvas>
    </div>

    <div class="stats-table">
      <table>
        <thead>
          <tr>
            <th>Date</th>
            <th>Infinity</th>
            <th>Speedrun</th>
            <th>Countdown</th>
            <th>Haste</th>
            <th>Mate in One</th>
            <th>Rook Endgames</th>
            <th>Openings</th>
            <th>Three</th>
            <th>Repetition Rounds</th>
            <th>Repetition Levels</th>
            <th>Total</th>
          </tr>
        </thead>
        <tbody>
          <% @stats.each do |date, day_stats| %>
            <tr>
              <td class="date-cell"><%= date.strftime("%b %d, %Y") %></td>
              <td><%= day_stats[:infinity] %></td>
              <td><%= day_stats[:speedrun] %></td>
              <td><%= day_stats[:countdown] %></td>
              <td><%= day_stats[:haste] %></td>
              <td><%= day_stats[:mate_in_one] %></td>
              <td><%= day_stats[:rook_endgames] %></td>
              <td><%= day_stats[:openings] %></td>
              <td><%= day_stats[:three] %></td>
              <td><%= day_stats[:repetition_rounds] %></td>
              <td><%= day_stats[:repetition_levels] %></td>
              <td class="total-cell"><strong><%= day_stats[:total] %></strong></td>
            </tr>
          <% end %>
        </tbody>
        <tfoot>
          <tr class="totals-row">
            <td><strong>Totals</strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:infinity] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:speedrun] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:countdown] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:haste] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:mate_in_one] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:rook_endgames] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:openings] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:three] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:repetition_rounds] } %></strong></td>
            <td><strong><%= @stats.values.sum { |s| s[:repetition_levels] } %></strong></td>
            <td class="total-cell"><strong><%= @stats.values.sum { |s| s[:total] } %></strong></td>
          </tr>
        </tfoot>
      </table>
    </div>

    <div class="admin-summary">
      <h2>Summary</h2>
      <p>Total game mode completions over the <%= @period_label.downcase %>: <strong><%= @stats.values.sum { |s| s[:total] } %></strong></p>
      <p>Average per day: <strong><%= (@stats.values.sum { |s| s[:total] } / @period_days.to_f).round(1) %></strong></p>
    </div>

    <div class="admin-summary">
      <h2>Puzzle Solving Summary</h2>
      <p>Total unique puzzles solved over the <%= @period_label.downcase %>: <strong><%= @solved_puzzle_stats.values.sum { |s| s[:puzzles] } %></strong></p>
      <p>Average puzzles solved per day: <strong><%= (@solved_puzzle_stats.values.sum { |s| s[:puzzles] } / @period_days.to_f).round(1) %></strong></p>
      <p>Total unique users who solved puzzles: <strong><%= @solved_puzzle_stats.values.sum { |s| s[:users] } %></strong></p>
      <p>Average unique users per day: <strong><%= (@solved_puzzle_stats.values.sum { |s| s[:users] } / @period_days.to_f).round(1) %></strong></p>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const ctx = document.getElementById('activityChart').getContext('2d');
  
  // Prepare data from Rails
  const dates = <%= raw @stats.keys.map { |date| date.strftime("%b %d, %Y") }.to_json %>;
  const data = {
    labels: dates,
    datasets: [
      {
        label: 'Infinity',
        data: <%= raw @stats.values.map { |s| s[:infinity] }.to_json %>,
        borderColor: '#4a90e2',
        backgroundColor: 'rgba(74, 144, 226, 0.1)',
        tension: 0.1
      },
      {
        label: 'Speedrun',
        data: <%= raw @stats.values.map { |s| s[:speedrun] }.to_json %>,
        borderColor: '#e74c3c',
        backgroundColor: 'rgba(231, 76, 60, 0.1)',
        tension: 0.1
      },
      {
        label: 'Countdown',
        data: <%= raw @stats.values.map { |s| s[:countdown] }.to_json %>,
        borderColor: '#f39c12',
        backgroundColor: 'rgba(243, 156, 18, 0.1)',
        tension: 0.1
      },
      {
        label: 'Haste',
        data: <%= raw @stats.values.map { |s| s[:haste] }.to_json %>,
        borderColor: '#27ae60',
        backgroundColor: 'rgba(39, 174, 96, 0.1)',
        tension: 0.1
      },
      {
        label: 'Mate in One',
        data: <%= raw @stats.values.map { |s| s[:mate_in_one] }.to_json %>,
        borderColor: '#9b59b6',
        backgroundColor: 'rgba(155, 89, 182, 0.1)',
        tension: 0.1
      },
      {
        label: 'Rook Endgames',
        data: <%= raw @stats.values.map { |s| s[:rook_endgames] }.to_json %>,
        borderColor: '#34495e',
        backgroundColor: 'rgba(52, 73, 94, 0.1)',
        tension: 0.1
      },
      {
        label: 'Openings',
        data: <%= raw @stats.values.map { |s| s[:openings] }.to_json %>,
        borderColor: '#8e44ad',
        backgroundColor: 'rgba(142, 68, 173, 0.1)',
        tension: 0.1
      },
      {
        label: 'Three',
        data: <%= raw @stats.values.map { |s| s[:three] }.to_json %>,
        borderColor: '#e67e22',
        backgroundColor: 'rgba(230, 126, 34, 0.1)',
        tension: 0.1
      },
      {
        label: 'Repetition Rounds',
        data: <%= raw @stats.values.map { |s| s[:repetition_rounds] }.to_json %>,
        borderColor: '#1abc9c',
        backgroundColor: 'rgba(26, 188, 156, 0.1)',
        tension: 0.1
      },
      {
        label: 'Repetition Levels',
        data: <%= raw @stats.values.map { |s| s[:repetition_levels] }.to_json %>,
        borderColor: '#95a5a6',
        backgroundColor: 'rgba(149, 165, 166, 0.1)',
        tension: 0.1
      }
    ]
  };

  new Chart(ctx, {
    type: 'line',
    data: data,
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        title: {
          display: true,
          text: 'Game Mode Activity Over Time',
          color: '#ffffff',
          font: {
            size: 16,
            weight: 'bold'
          }
        },
        legend: {
          labels: {
            color: '#e0e0e0',
            usePointStyle: true,
            padding: 20
          }
        }
      },
      scales: {
        x: {
          title: {
            display: true,
            text: 'Date',
            color: '#e0e0e0',
            font: {
              size: 14,
              weight: 'bold'
            }
          },
          ticks: {
            color: '#e0e0e0'
          },
          grid: {
            color: '#404040'
          }
        },
        y: {
          title: {
            display: true,
            text: 'Number of Completions',
            color: '#e0e0e0',
            font: {
              size: 14,
              weight: 'bold'
            }
          },
          ticks: {
            color: '#e0e0e0',
            beginAtZero: true
          },
          grid: {
            color: '#404040'
          }
        }
      },
      interaction: {
        intersect: false,
        mode: 'index'
      }
    }
  });

  // Solved Puzzles Chart
  const solvedPuzzlesCtx = document.getElementById('solvedPuzzlesChart').getContext('2d');
  
  const solvedPuzzlesData = {
    labels: dates,
    datasets: [
      {
        label: 'Unique Puzzles Solved',
        data: <%= raw @solved_puzzle_stats.values.map { |s| s[:puzzles] }.to_json %>,
        borderColor: '#ff6b6b',
        backgroundColor: 'rgba(255, 107, 107, 0.1)',
        tension: 0.1,
        fill: true
      },
      {
        label: 'Unique Users Solving Puzzles',
        data: <%= raw @solved_puzzle_stats.values.map { |s| s[:users] }.to_json %>,
        borderColor: '#4ecdc4',
        backgroundColor: 'rgba(78, 205, 196, 0.1)',
        tension: 0.1,
        fill: true
      }
    ]
  };

  new Chart(solvedPuzzlesCtx, {
    type: 'line',
    data: solvedPuzzlesData,
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        title: {
          display: true,
          text: 'Puzzle Solving Activity Over Time',
          color: '#ffffff',
          font: {
            size: 16,
            weight: 'bold'
          }
        },
        legend: {
          labels: {
            color: '#e0e0e0',
            usePointStyle: true,
            padding: 20
          }
        }
      },
      scales: {
        x: {
          title: {
            display: true,
            text: 'Date',
            color: '#e0e0e0',
            font: {
              size: 14,
              weight: 'bold'
            }
          },
          ticks: {
            color: '#e0e0e0'
          },
          grid: {
            color: '#404040'
          }
        },
        y: {
          title: {
            display: true,
            text: 'Count',
            color: '#e0e0e0',
            font: {
              size: 14,
              weight: 'bold'
            }
          },
          ticks: {
            color: '#e0e0e0',
            beginAtZero: true
          },
          grid: {
            color: '#404040'
          }
        }
      },
      interaction: {
        intersect: false,
        mode: 'index'
      }
    }
  });
});
</script>

<style>
.admin-dashboard {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  padding: 20px;
  background: #1a1a1a;
  color: #e0e0e0;
  min-height: 100vh;
  box-sizing: border-box;
}

.admin-dashboard h1 {
  color: #ffffff;
  margin-bottom: 10px;
}

.period-toggle {
  display: flex;
  gap: 10px;
  margin-bottom: 20px;
}

.toggle-btn {
  padding: 10px 20px;
  background: #2d2d2d;
  color: #e0e0e0;
  text-decoration: none;
  border-radius: 6px;
  border: 1px solid #404040;
  font-weight: 500;
  transition: all 0.3s ease;
}

.toggle-btn:hover {
  background: #3a3a3a;
  color: #ffffff;
  border-color: #555;
}

.toggle-btn.active {
  background: #4a90e2;
  color: #ffffff;
  border-color: #4a90e2;
}

.admin-subtitle {
  color: #b0b0b0;
  margin-bottom: 30px;
  font-size: 16px;
}

.stats-table {
  overflow-x: auto;
  margin-bottom: 30px;
}

.stats-table table {
  width: 100%;
  border-collapse: collapse;
  background: #2d2d2d;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0,0,0,0.3);
  border: 1px solid #404040;
}

.stats-table th,
.stats-table td {
  padding: 12px 8px;
  text-align: center;
  border-bottom: 1px solid #404040;
  color: #e0e0e0;
}

.stats-table th {
  background: #3a3a3a;
  font-weight: 600;
  color: #ffffff;
  font-size: 12px;
  border-bottom: 2px solid #555;
}

.stats-table td {
  font-size: 14px;
  color: #e0e0e0;
}

.date-cell {
  text-align: left !important;
  font-weight: 500;
  background: #3a3a3a;
  color: #ffffff;
}

.total-cell {
  background: #1e3a5f;
  font-weight: 600;
  color: #ffffff;
}

.totals-row {
  background: #2a4a6b;
  font-weight: 600;
}

.totals-row td {
  border-top: 2px solid #4a90e2;
  color: #ffffff;
}

.admin-summary {
  background: #2d2d2d;
  padding: 20px;
  border-radius: 8px;
  border-left: 4px solid #4a90e2;
  border: 1px solid #404040;
}

.admin-summary h2 {
  margin-top: 0;
  color: #ffffff;
}

.admin-summary p {
  margin: 10px 0;
  font-size: 16px;
  color: #e0e0e0;
}

.admin-summary strong {
  color: #4a90e2;
}

.chart-container {
  background: #2d2d2d;
  padding: 20px;
  border-radius: 8px;
  margin-bottom: 30px;
  border: 1px solid #404040;
}

.chart-container h2 {
  margin-top: 0;
  color: #ffffff;
  margin-bottom: 20px;
}

#activityChart,
#solvedPuzzlesChart {
  background: #1a1a1a;
  border-radius: 4px;
  max-height: 400px;
}
</style>
