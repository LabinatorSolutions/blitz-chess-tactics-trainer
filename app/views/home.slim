section.homepage

  - if @quest_mode_enabled
    .quest-section
      - if @quest_world && @quest_world_levels_with_puzzles
        .quest-bg(
          style="background-image: url(/backgrounds/#{@background_img})")
        .quest-above-bg(
          style="background: #{@background_overlay || "rgba(0,0,0,0.5)"}")

        .quest-container.container
          header.world-intro
            .world-name= @quest_world.description

          main.world-levels
            - if @quest_world_levels_with_puzzles&.any?
              - @quest_world_levels_with_puzzles.each do |level_data|
                - if level_data && level_data['id']
                  a.quest-level-link(href="/quest/#{@quest_world.id}/#{level_data['id']}" class="#{'completed' if level_data['completed']}")
                    .quest-level
                      - if level_data['first_puzzle']
                        - puzzle_data = level_data['first_puzzle']
                        - puzzle_fen = puzzle_data[:fen] if puzzle_data
                        - puzzle_flip = puzzle_fen&.include?(" w ") || false
                        - initial_move = puzzle_data[:initial_move] if puzzle_data
                        .board-link= render(partial: "static/snippets/miniboard",
                                          locals: { fen: puzzle_fen,
                                                   flip: puzzle_flip,
                                                   initial_move: initial_move,
                                                   title: "Level #{level_data['number']} - First Puzzle" })
                      .level-info-bottom
                        .success-criteria= level_data['success_criteria_description']
                        - if level_data['completed']
                          .completion-indicator
                            .checkmark âœ“

        .quest-container-bottom.container
          - if user_signed_in? && @quest_world.completed_by?(current_user)
            .quest-completed
              .completion-message
                .title World Complete!
                .description You've completed all levels in this world
              .action-buttons
                - next_world = get_next_quest_world_for_user(current_user)
                - if next_world && next_world != @quest_world
                  a.blue-button(href="/?world=#{next_world.id}") Continue to Next World
                - else
                  a.blue-button(href="/") Back to Homepage
          - else
            div Complete all levels to continue
      - elsif @all_quest_worlds_complete
        .quest-bg(
          style="background-image: url(/backgrounds/#{@background_img})")
        .quest-above-bg(
          style="background: #{@background_overlay || "rgba(0,0,0,0.5)"}")

        .quest-container.container
          header.world-intro
            .world-name All quest worlds complete!
          main.world-levels
            .quest-level
              .level-info-top ðŸŽ‰ Congratulations! ðŸŽ‰
              .level-info-bottom You've completed all available quest worlds.
      - else
        = render partial: "worlds/world-#{@world_number}"

  - if user_signed_in?
    .user-puzzle-indicator
      .container
        .puzzle-count-display
          span.puzzle-count-label You've solved
          span.puzzle-count-number= current_user.unique_puzzles_solved_count
          span.puzzle-count-label unique puzzles

  .game-modes-section
    .container
      header
        - if @quest_mode_enabled
          h2 Practice fast-paced chess puzzles in another game mode.
        - else
          h2 Fast-paced chess puzzles. Choose a game mode to get started.

    .game-modes-container
      .mode.haste
        h3
          a(href="/haste") Haste
        h4.game-mode-description
          | Combos gain time. Mistakes lose time. New puzzles each run.
        = homepage_miniboard_link("/haste", @haste_puzzle)
        .under-mini-board
          - if user_signed_in?
            .your-best-times
              | Best score today:
              span.best-time<= @haste_best_score
          .daily-level
            | New puzzles each run

      .mode.threes
        h3
          a(href="/three") Three
        h4.game-mode-description
          | Three minutes, three lives,
          br
          | three hints
        = homepage_miniboard_link("/three", @rated_puzzle)
        .under-mini-board
          - if user_signed_in?
            .your-best-times
              | Best score today:
              span.best-time<= @three_best_score
          .daily-level
            | New puzzles each run

      .mode.countdown
        h3
          a(href="/countdown") Countdown
        h4.game-mode-description
          | Solve puzzles before time runs out. New level each day.
        = homepage_miniboard_link("/countdown", @countdown_puzzle)
        .under-mini-board
          - if user_signed_in?
            .your-best-times
              | Best score today:
              span.best-time<= @countdown_level_score
          .daily-level
            .next-day
              | Next level in #{@hours_until_tomorrow} hours

      .mode.speedrun
        h3
          a(href="/speedrun") Speedrun
        h4.game-mode-description
          | Solve a sequence of puzzles as quickly as you can.
        = homepage_miniboard_link("/speedrun", @speedrun_puzzle)
        .under-mini-board.speedrun
          - if user_signed_in?
            .your-best-times
              | Best time today:
              span.best-time<= @best_speedrun_time
          .daily-level
            - if @speedrun_theme
              .next-day
                | Theme: #{titleize_theme(@speedrun_theme)}
            - else
              .next-day
                | Next speedrun in #{@hours_until_tomorrow} hours

      - if @infinity_puzzle
        .mode.infinity
          h3
            a(href="/infinity") Infinity
          h4.game-mode-description
            | Play through endless puzzles. Set your own difficulty.
          = homepage_miniboard_link("/infinity", @infinity_puzzle)
          .under-mini-board
            - if user_signed_in?
              | You've solved #{current_user.num_infinity_puzzles_solved} puzzles
            - else
              a>(href="/users/sign_up") Sign up
              | to track your progress

      .mode.repetition
        h3
          a(href="#{@repetition_level.path}") Repetition
        h4.game-mode-description
          | Quickly solve puzzles without mistakes to unlock the next level.
        = homepage_miniboard_link(@repetition_level.path, @repetition_level.first_puzzle)
        .under-mini-board= @repetition_level.display_name

    .scoreboard-section
      .mini-scoreboard
        - if @scoreboard.week_scores?
          .scores
            h6 Past 7 days
            - if @scoreboard.top_haste_scores_week.present?
              .top-players
                h5 Haste high scores
                - @scoreboard.top_haste_scores_week.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

            - if @scoreboard.top_three_scores_week.present?
              .top-players
                h5 Three high scores
                - @scoreboard.top_three_scores_week.each do |user, puzzles_solved|
                  .ranking
                    .player-name= user_link(user)
                    .stats= puzzles_solved

            - if @scoreboard.top_infinity_week.present?
              .top-infinity.top-players
                h5 Most infinity puzzles solved
                - @scoreboard.top_infinity_week.each do |user, puzzles_solved|
                  .ranking
                    .player-name= user_link(user)
                    .stats= puzzles_solved


        - if @scoreboard.recent_scores?
          .scores
            h6 Past 24 hours
            - if @scoreboard.top_haste_scores_recent.present?
              .top-players
                h5 Haste high scores
                - @scoreboard.top_haste_scores_recent.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

            - if @scoreboard.top_three_scores_recent.present?
              .top-players
                h5 Three high scores
                - @scoreboard.top_three_scores_recent.each do |user, puzzles_solved|
                  .ranking
                    .player-name= user_link(user)
                    .stats= puzzles_solved

            - if @scoreboard.top_infinity_recent.present?
              .top-infinity.top-players
                h5 Most infinity puzzles solved
                - @scoreboard.top_infinity_recent.each do |user, puzzles_solved|
                  .ranking
                    .player-name= user_link(user)
                    .stats= puzzles_solved


        - fastest_speedruns = @scoreboard.fastest_speedruns(SpeedrunLevel.yesterdays_level)
        - countdown_high_scores = @scoreboard.countdown_high_scores(CountdownLevel.yesterdays_level)
        - if fastest_speedruns.present? or countdown_high_scores.present?
          .scores
            h6 Yesterday
            - if fastest_speedruns.present?
              .fastest-speedruns.top-players
                h5 Fastest speedruns
                - fastest_speedruns.each do |user, formatted_time_spent|
                  .ranking
                    .player-name= user_link(user)
                    .stats= formatted_time_spent
            - if countdown_high_scores.present?
              .countdown-high-scores.top-players
                h5 Countdown high scores
                - countdown_high_scores.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

        - fastest_speedruns = @scoreboard.fastest_speedruns(@speedrun_level)
        - countdown_high_scores = @scoreboard.countdown_high_scores(@countdown_level)
        - if fastest_speedruns.present? or countdown_high_scores.present?
          .scores
            h6 Today
            - if fastest_speedruns.present?
              .fastest-speedruns.top-players
                h5 Fastest speedruns
                - fastest_speedruns.each do |user, formatted_time_spent|
                  .ranking
                    .player-name= user_link(user)
                    .stats= formatted_time_spent

            - if countdown_high_scores.present?
              .countdown-high-scores.top-players
                h5 Countdown high scores
                - countdown_high_scores.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

    .themed-puzzle-sets-section
      h2 Themed chess puzzle sets.
      .description Combos gain time. Mistakes lose time. New puzzles each run.
      .themed-modes-container
        .mode.mate-in-one
          h3
            a(href="/mate-in-one") Mate in one
          h4.game-mode-description
            | Practice checkmate in one move. Great for beginners.
          = homepage_miniboard_link("/mate-in-one", @mate_in_one_puzzle)
          .under-mini-board
            - if user_signed_in?
              .your-best-times
                | Best score today:
                span.best-time<= @mate_in_one_best_score

        .mode.rook-endgames
          h3
            a(href="/rook-endgames") Rook endgames
          h4.game-mode-description
            | The most common type of piece endgames.
          = homepage_miniboard_link("/rook-endgames", @rook_endgames_puzzle)
          .under-mini-board
            - if user_signed_in?
              .your-best-times
                | Best score today:
                span.best-time<= @rook_endgames_best_score

        .mode.openings
          h3
            a(href="/openings") Openings
          h4.game-mode-description
            | Practice tactical patterns from chess openings.
          = homepage_miniboard_link("/openings", @openings_puzzle)
          .under-mini-board
            - if user_signed_in?
              .your-best-times
                | Best score today:
                span.best-time<= @openings_best_score

    .themed-scoreboard-section
      .mini-scoreboard
        - if @scoreboard.themed_scores?
          .scores
            h6 Past 3 days
            - if @scoreboard.top_mate_in_one_scores_three_days.present?
              .top-players
                h5 Mate in one high scores
                - @scoreboard.top_mate_in_one_scores_three_days.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

            - if @scoreboard.top_rook_endgames_scores_three_days.present?
              .top-players
                h5 Rook endgames high scores
                - @scoreboard.top_rook_endgames_scores_three_days.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

            - if @scoreboard.top_openings_scores_three_days.present?
              .top-players
                h5 Openings high scores
                - @scoreboard.top_openings_scores_three_days.each do |user, high_score|
                  .ranking
                    .player-name= user_link(user)
                    .stats= high_score

    .bottom
      .container
        .updates
          = render "/site_updates"

          h6 Links
          .update
            a(href="https://discord.gg/uqqhXbd") Join the Discord channel
          .update
            a(href="/positions") Practice endgame positions

= render 'shared/main_footer'
